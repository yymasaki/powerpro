package com.example.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DevExperienceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public DevExperienceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andDevExperienceIdIsNull() {
            addCriterion("dev_experience_id is null");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdIsNotNull() {
            addCriterion("dev_experience_id is not null");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdEqualTo(Integer value) {
            addCriterion("dev_experience_id =", value, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdNotEqualTo(Integer value) {
            addCriterion("dev_experience_id <>", value, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdGreaterThan(Integer value) {
            addCriterion("dev_experience_id >", value, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dev_experience_id >=", value, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdLessThan(Integer value) {
            addCriterion("dev_experience_id <", value, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdLessThanOrEqualTo(Integer value) {
            addCriterion("dev_experience_id <=", value, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdIn(List<Integer> values) {
            addCriterion("dev_experience_id in", values, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdNotIn(List<Integer> values) {
            addCriterion("dev_experience_id not in", values, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdBetween(Integer value1, Integer value2) {
            addCriterion("dev_experience_id between", value1, value2, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andDevExperienceIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dev_experience_id not between", value1, value2, "devExperienceId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdIsNull() {
            addCriterion("specsheet_id is null");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdIsNotNull() {
            addCriterion("specsheet_id is not null");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdEqualTo(Integer value) {
            addCriterion("specsheet_id =", value, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdNotEqualTo(Integer value) {
            addCriterion("specsheet_id <>", value, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdGreaterThan(Integer value) {
            addCriterion("specsheet_id >", value, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("specsheet_id >=", value, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdLessThan(Integer value) {
            addCriterion("specsheet_id <", value, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdLessThanOrEqualTo(Integer value) {
            addCriterion("specsheet_id <=", value, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdIn(List<Integer> values) {
            addCriterion("specsheet_id in", values, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdNotIn(List<Integer> values) {
            addCriterion("specsheet_id not in", values, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdBetween(Integer value1, Integer value2) {
            addCriterion("specsheet_id between", value1, value2, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andSpecsheetIdNotBetween(Integer value1, Integer value2) {
            addCriterion("specsheet_id not between", value1, value2, "specsheetId");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNull() {
            addCriterion("project_name is null");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNotNull() {
            addCriterion("project_name is not null");
            return (Criteria) this;
        }

        public Criteria andProjectNameEqualTo(String value) {
            addCriterion("project_name =", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotEqualTo(String value) {
            addCriterion("project_name <>", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThan(String value) {
            addCriterion("project_name >", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThanOrEqualTo(String value) {
            addCriterion("project_name >=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThan(String value) {
            addCriterion("project_name <", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThanOrEqualTo(String value) {
            addCriterion("project_name <=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLike(String value) {
            addCriterion("project_name like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotLike(String value) {
            addCriterion("project_name not like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameIn(List<String> values) {
            addCriterion("project_name in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotIn(List<String> values) {
            addCriterion("project_name not in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameBetween(String value1, String value2) {
            addCriterion("project_name between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotBetween(String value1, String value2) {
            addCriterion("project_name not between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andStartedOnIsNull() {
            addCriterion("started_on is null");
            return (Criteria) this;
        }

        public Criteria andStartedOnIsNotNull() {
            addCriterion("started_on is not null");
            return (Criteria) this;
        }

        public Criteria andStartedOnEqualTo(Date value) {
            addCriterionForJDBCDate("started_on =", value, "startedOn");
            return (Criteria) this;
        }

        public Criteria andStartedOnNotEqualTo(Date value) {
            addCriterionForJDBCDate("started_on <>", value, "startedOn");
            return (Criteria) this;
        }

        public Criteria andStartedOnGreaterThan(Date value) {
            addCriterionForJDBCDate("started_on >", value, "startedOn");
            return (Criteria) this;
        }

        public Criteria andStartedOnGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("started_on >=", value, "startedOn");
            return (Criteria) this;
        }

        public Criteria andStartedOnLessThan(Date value) {
            addCriterionForJDBCDate("started_on <", value, "startedOn");
            return (Criteria) this;
        }

        public Criteria andStartedOnLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("started_on <=", value, "startedOn");
            return (Criteria) this;
        }

        public Criteria andStartedOnIn(List<Date> values) {
            addCriterionForJDBCDate("started_on in", values, "startedOn");
            return (Criteria) this;
        }

        public Criteria andStartedOnNotIn(List<Date> values) {
            addCriterionForJDBCDate("started_on not in", values, "startedOn");
            return (Criteria) this;
        }

        public Criteria andStartedOnBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("started_on between", value1, value2, "startedOn");
            return (Criteria) this;
        }

        public Criteria andStartedOnNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("started_on not between", value1, value2, "startedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnIsNull() {
            addCriterion("finished_on is null");
            return (Criteria) this;
        }

        public Criteria andFinishedOnIsNotNull() {
            addCriterion("finished_on is not null");
            return (Criteria) this;
        }

        public Criteria andFinishedOnEqualTo(Date value) {
            addCriterionForJDBCDate("finished_on =", value, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnNotEqualTo(Date value) {
            addCriterionForJDBCDate("finished_on <>", value, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnGreaterThan(Date value) {
            addCriterionForJDBCDate("finished_on >", value, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("finished_on >=", value, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnLessThan(Date value) {
            addCriterionForJDBCDate("finished_on <", value, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("finished_on <=", value, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnIn(List<Date> values) {
            addCriterionForJDBCDate("finished_on in", values, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnNotIn(List<Date> values) {
            addCriterionForJDBCDate("finished_on not in", values, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("finished_on between", value1, value2, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andFinishedOnNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("finished_on not between", value1, value2, "finishedOn");
            return (Criteria) this;
        }

        public Criteria andTeamMembersIsNull() {
            addCriterion("team_members is null");
            return (Criteria) this;
        }

        public Criteria andTeamMembersIsNotNull() {
            addCriterion("team_members is not null");
            return (Criteria) this;
        }

        public Criteria andTeamMembersEqualTo(Integer value) {
            addCriterion("team_members =", value, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andTeamMembersNotEqualTo(Integer value) {
            addCriterion("team_members <>", value, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andTeamMembersGreaterThan(Integer value) {
            addCriterion("team_members >", value, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andTeamMembersGreaterThanOrEqualTo(Integer value) {
            addCriterion("team_members >=", value, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andTeamMembersLessThan(Integer value) {
            addCriterion("team_members <", value, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andTeamMembersLessThanOrEqualTo(Integer value) {
            addCriterion("team_members <=", value, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andTeamMembersIn(List<Integer> values) {
            addCriterion("team_members in", values, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andTeamMembersNotIn(List<Integer> values) {
            addCriterion("team_members not in", values, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andTeamMembersBetween(Integer value1, Integer value2) {
            addCriterion("team_members between", value1, value2, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andTeamMembersNotBetween(Integer value1, Integer value2) {
            addCriterion("team_members not between", value1, value2, "teamMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersIsNull() {
            addCriterion("project_members is null");
            return (Criteria) this;
        }

        public Criteria andProjectMembersIsNotNull() {
            addCriterion("project_members is not null");
            return (Criteria) this;
        }

        public Criteria andProjectMembersEqualTo(Integer value) {
            addCriterion("project_members =", value, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersNotEqualTo(Integer value) {
            addCriterion("project_members <>", value, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersGreaterThan(Integer value) {
            addCriterion("project_members >", value, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersGreaterThanOrEqualTo(Integer value) {
            addCriterion("project_members >=", value, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersLessThan(Integer value) {
            addCriterion("project_members <", value, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersLessThanOrEqualTo(Integer value) {
            addCriterion("project_members <=", value, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersIn(List<Integer> values) {
            addCriterion("project_members in", values, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersNotIn(List<Integer> values) {
            addCriterion("project_members not in", values, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersBetween(Integer value1, Integer value2) {
            addCriterion("project_members between", value1, value2, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andProjectMembersNotBetween(Integer value1, Integer value2) {
            addCriterion("project_members not between", value1, value2, "projectMembers");
            return (Criteria) this;
        }

        public Criteria andRoleIsNull() {
            addCriterion("role is null");
            return (Criteria) this;
        }

        public Criteria andRoleIsNotNull() {
            addCriterion("role is not null");
            return (Criteria) this;
        }

        public Criteria andRoleEqualTo(String value) {
            addCriterion("role =", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleNotEqualTo(String value) {
            addCriterion("role <>", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleGreaterThan(String value) {
            addCriterion("role >", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleGreaterThanOrEqualTo(String value) {
            addCriterion("role >=", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleLessThan(String value) {
            addCriterion("role <", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleLessThanOrEqualTo(String value) {
            addCriterion("role <=", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleLike(String value) {
            addCriterion("role like", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleNotLike(String value) {
            addCriterion("role not like", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleIn(List<String> values) {
            addCriterion("role in", values, "role");
            return (Criteria) this;
        }

        public Criteria andRoleNotIn(List<String> values) {
            addCriterion("role not in", values, "role");
            return (Criteria) this;
        }

        public Criteria andRoleBetween(String value1, String value2) {
            addCriterion("role between", value1, value2, "role");
            return (Criteria) this;
        }

        public Criteria andRoleNotBetween(String value1, String value2) {
            addCriterion("role not between", value1, value2, "role");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dev_experiences
     *
     * @mbggenerated do_not_delete_during_merge Tue May 26 13:22:04 JST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dev_experiences
     *
     * @mbggenerated Tue May 26 13:22:04 JST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}
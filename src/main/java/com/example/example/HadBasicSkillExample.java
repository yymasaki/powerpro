package com.example.example;

import java.util.ArrayList;
import java.util.List;

public class HadBasicSkillExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public HadBasicSkillExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andHadBasicSkillIdIsNull() {
            addCriterion("had_basic_skill_id is null");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdIsNotNull() {
            addCriterion("had_basic_skill_id is not null");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdEqualTo(Integer value) {
            addCriterion("had_basic_skill_id =", value, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdNotEqualTo(Integer value) {
            addCriterion("had_basic_skill_id <>", value, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdGreaterThan(Integer value) {
            addCriterion("had_basic_skill_id >", value, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("had_basic_skill_id >=", value, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdLessThan(Integer value) {
            addCriterion("had_basic_skill_id <", value, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdLessThanOrEqualTo(Integer value) {
            addCriterion("had_basic_skill_id <=", value, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdIn(List<Integer> values) {
            addCriterion("had_basic_skill_id in", values, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdNotIn(List<Integer> values) {
            addCriterion("had_basic_skill_id not in", values, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdBetween(Integer value1, Integer value2) {
            addCriterion("had_basic_skill_id between", value1, value2, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andHadBasicSkillIdNotBetween(Integer value1, Integer value2) {
            addCriterion("had_basic_skill_id not between", value1, value2, "hadBasicSkillId");
            return (Criteria) this;
        }

        public Criteria andStatusIdIsNull() {
            addCriterion("status_id is null");
            return (Criteria) this;
        }

        public Criteria andStatusIdIsNotNull() {
            addCriterion("status_id is not null");
            return (Criteria) this;
        }

        public Criteria andStatusIdEqualTo(Integer value) {
            addCriterion("status_id =", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdNotEqualTo(Integer value) {
            addCriterion("status_id <>", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdGreaterThan(Integer value) {
            addCriterion("status_id >", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("status_id >=", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdLessThan(Integer value) {
            addCriterion("status_id <", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdLessThanOrEqualTo(Integer value) {
            addCriterion("status_id <=", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdIn(List<Integer> values) {
            addCriterion("status_id in", values, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdNotIn(List<Integer> values) {
            addCriterion("status_id not in", values, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdBetween(Integer value1, Integer value2) {
            addCriterion("status_id between", value1, value2, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdNotBetween(Integer value1, Integer value2) {
            addCriterion("status_id not between", value1, value2, "statusId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdIsNull() {
            addCriterion("basic_skill_id is null");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdIsNotNull() {
            addCriterion("basic_skill_id is not null");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdEqualTo(Integer value) {
            addCriterion("basic_skill_id =", value, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdNotEqualTo(Integer value) {
            addCriterion("basic_skill_id <>", value, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdGreaterThan(Integer value) {
            addCriterion("basic_skill_id >", value, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("basic_skill_id >=", value, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdLessThan(Integer value) {
            addCriterion("basic_skill_id <", value, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdLessThanOrEqualTo(Integer value) {
            addCriterion("basic_skill_id <=", value, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdIn(List<Integer> values) {
            addCriterion("basic_skill_id in", values, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdNotIn(List<Integer> values) {
            addCriterion("basic_skill_id not in", values, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdBetween(Integer value1, Integer value2) {
            addCriterion("basic_skill_id between", value1, value2, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andBasicSkillIdNotBetween(Integer value1, Integer value2) {
            addCriterion("basic_skill_id not between", value1, value2, "basicSkillId");
            return (Criteria) this;
        }

        public Criteria andScoreIsNull() {
            addCriterion("score is null");
            return (Criteria) this;
        }

        public Criteria andScoreIsNotNull() {
            addCriterion("score is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEqualTo(String value) {
            addCriterion("score =", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotEqualTo(String value) {
            addCriterion("score <>", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThan(String value) {
            addCriterion("score >", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThanOrEqualTo(String value) {
            addCriterion("score >=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThan(String value) {
            addCriterion("score <", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThanOrEqualTo(String value) {
            addCriterion("score <=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLike(String value) {
            addCriterion("score like", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotLike(String value) {
            addCriterion("score not like", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreIn(List<String> values) {
            addCriterion("score in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotIn(List<String> values) {
            addCriterion("score not in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreBetween(String value1, String value2) {
            addCriterion("score between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotBetween(String value1, String value2) {
            addCriterion("score not between", value1, value2, "score");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table had_basic_skills
     *
     * @mbggenerated do_not_delete_during_merge Tue May 26 13:16:27 JST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table had_basic_skills
     *
     * @mbggenerated Tue May 26 13:16:27 JST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}